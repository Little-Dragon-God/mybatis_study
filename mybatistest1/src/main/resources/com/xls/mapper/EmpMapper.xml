<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Emp">
    <!--id一般是dao层方法名，resultType是实体类的返回值类型，写全限定名
    parameterType 在有参数情况下也是可以省略不写  mybatis可以根据实际情况自动判断
    在SQL语句上可以使用${}  #{} 代表参数的占位
    如果参数是单个基本数据类型，{}里参数可以谁便写，但建议见名知意，自定义类型参数是属性名
    ${} 代表mybatis底层使用Statment语句对象,参数是以字符串拼接的形式设置
    #{} 代表mybatis底层使用的preparedStatment语句对象,参数使用?作为占位符处理-->
    <select id="findOne" resultType="emp" parameterType="integer">
    select * from emp where empno = #{empno}
  </select>
    <!--返回多个对象list集合-->
    <select id="findAll" resultType="emp">
        select * from emp
    </select>
    <!--返回多个对象的Map集合-->
    <select id="findEmpMap" resultType="map">
        select * from emp
    </select>
    <!--
    增删方法的返回值类型都是int，resultType就无需指定了
    insert update delete 标签中没有resultType
    但可以有paramaterType
    -->
    <insert id="addEmp" parameterType="emp">
        insert into emp values(#{empno},#{ename},#{job},#{mgr},#{hiredate},#{sal},#{comm},#{deptno})
    </insert>
    <!--修改-->
    <update id="updEmp" >
        update emp set ename=#{ename} where empno=#{empno}
    </update>
    <!--删除-->
    <delete id="deleteEmp" >
        delete from emp where empno = #{empno}
    </delete>
</mapper>